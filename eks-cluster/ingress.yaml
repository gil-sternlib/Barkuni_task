apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: barkuni-app-ingress
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/subnets: "subnet-09953b604a2b9e977,subnet-0bff9b5084623623f,subnet-061ae542e3f8fe03f"
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
#    alb.ingress.kubernetes.io/security-groups: "sg-00f92ba6cbd006d63"

spec:
  rules:
    - host: test.vicarius.xyz
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: barkuni-app-service
                port:
                  number: 80